{"version":3,"sources":["portfolio/ui/canvas/code.cljs"],"mappings":";AAMA,4CAAA,5CAAMA,gGAAYC,MAAMC,KAAKC;AAA7B,mDACM,AAACC,6CAAyBH,MAAMC,KAAKC,3GACrC,iHAAA,8DAAA,xKAACE;;AAEP,4CAAA,5CAAMC,gGAAkBC;AAAxB,AACE,WAAA,2CAAA,kDAAA,iEAAA,uLAAA,5VAAML,iOACe,AAAA,qHAAA,PAAsBK,2EACrB,AAAA,qHAAA,PAAsBA;AAF5C,AAGE,gCAAA,2CAAA,AAAA,pEAACC,oBACCN,uMAEC,WAAKO,MAAMR,MAAMS;AAAjB,AACE,IAAMC,cAAM,AAACX,0CAAWC,MAAMC,KAAKQ;AAAnC,AACE,GAAM,wRAAK,AAACE,eAAK,AAAA,uFAASX,9QACf,AAACY,+CAAO,AAACD,eAAK,AAAA,kGAAcX,lQAC5B,6CAAA,7CAACa,dACDC;AAHX,AAIE,2BAAA,2CAAA,sDAAA,cAAA,sEAAA,gEAAA,zQAACP,8TAGQ;AAAA,AAAAS,+BAAA,yGAAA,mFAAA,kDAAA,2CAAA,wDAAA,6BAAA,2DAAA,sBAAA,mFAAA,qDAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,oDAAA,uBAAA,mFAAA,8DAAA,2CAAA,0DAAA,4BAAA,oDAAA,OAAA,yDAAA,eAAA,0EAAA,QAAA,4EAAA,QAAA,oEAAA,qBAAA,mFAAA,8DAAA,2CAAA,0DAAA,gCAAA,oDAAA,OAAA,yDAAA,eAAA,0EAAA,QAAA,4EAAA,QAAA,oEAAA;;AAAA;;CAHT,2EAAA,sWAAA,2CAAA,AAAA,mJAAA,gGAAA,AAAA,gKAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,4IAAA,AAAA,oEAAA,AAAA,sDAAA,AAAA,GAAA,AAAA,EAAA,AAAA,EAAA,AAAA,EAAA,AAAA,qBAAA,AAAA,GAAA,kBAAAD,2DAAA,AAAA,AAAAA,yEAAA,j0DAIcL,uEACF,sJAAA,2CAAA,jMAACO,2CAAuBjB,MAAMC,KAAK,AAAA,uFAAUQ,kHAAsB,AAACS,cAAIR;;AATtF;;GALP,AAAA,iIAkBG,WAAKS,EAAEC,EAAEpB,MAAMqB,KAAKC;AAApB,AACE,IAAAC,WACCvB;IADDwB,WAECH;IAFDI,WAGC,iBAAAC,WAAQJ;AAAR,AAAA,GACE,AAACJ,cAAI,AAACnB,0CAAWC,MAAMC,KAAKqB;AAC5B,sDAAAI,SAAA,xDAACC,iHAAe,WAAKC;AAAL,AAAa,mDAAA,WAAAC,vDAACC;AAAD,AAAM,sDAAAD,iBAAA,hEAACE;GAAgBH;;;AAFtDF;;;AAHD,AAAA,0EAAAH,SAAAC,SAAAC,wBAAAF,SAAAC,SAAAC,9HAACL,kCAAAA,8DAAAA;GAnBN,AAAA,kIA2BG,WAAKD,EAAEC,EAAEpB,MAAMgC,SAASX;AAAxB,AACE,IAAAY,WAAQ,CAACb,kCAAAA,uDAAAA,vBAAEpB,mCAAAA,7BAAMgC,mCAAAA,1BAASX,mCAAAA;AAA1B,AAAA,GACE,AAACH,cAAI,qDAAA,2CAAA,hGAACnB,0CAAWC,MAAMC,yGAAe,AAAA,gFAAKoB;AAC3C,sDAAAY,SAAA,xDAACF;;AAFHE","names":["portfolio.ui.canvas.code/show-code?","state","tool","opts","portfolio.ui.canvas.addons/get-current-value","cljs.core.get","portfolio.ui.canvas.code/create-code-tool","config","cljs.core/with-meta","_tool","options","code?","cljs.core/vals","cljs.core.concat","cljs.core.keep","cljs.core/seq","portfolio.ui.components.canvas-toolbar-buttons/MenuButton","phosphor.icons/load-icon!","portfolio.ui.canvas.addons/get-set-actions","cljs.core/not","_","f","view","ctx","G__44972","G__44973","G__44974","G__44975","cljs.core.update","scenes","p1__44970#","cljs.core.map","cljs.core.dissoc","location","G__44977"],"sourcesContent":["(ns portfolio.ui.canvas.code\n  (:require [phosphor.icons :as icons]\n            [portfolio.ui.canvas.addons :as addons]\n            [portfolio.ui.canvas.protocols :as canvas]\n            [portfolio.ui.components.canvas-toolbar-buttons :refer [MenuButton]]))\n\n(defn show-code? [state tool opts]\n  (-> (addons/get-current-value state tool opts)\n      (get :code/show? false)))\n\n(defn create-code-tool [config]\n  (let [tool {:id :canvas/code\n              :global? (:docs/global-toggle? config true)\n              :persist? (:docs/global-toggle? config true)}]\n    (with-meta\n      tool\n      {`canvas/prepare-toolbar-button\n       (fn [_tool state options]\n         (let [code? (show-code? state tool options)]\n           (when (->> (vals (:scenes state))\n                      (concat (vals (:collections state)))\n                      (keep :code)\n                      seq)\n             (with-meta\n               {:title \"Toggle code\"\n                :button-group :canvas/docs\n                :icon (icons/icon :phosphor.regular/brackets-square)\n                :selected? code?\n                :actions (addons/get-set-actions state tool (:pane-id options) {:code/show? (not code?)})}\n               {`canvas/render-toolbar-button #'MenuButton}))))\n\n       `canvas/prepare-pane\n       (fn [_ f state view ctx]\n         (f\n          state\n          view\n          (cond-> ctx\n            (not (show-code? state tool ctx))\n            (update :scenes (fn [scenes] (map #(dissoc % :code) scenes))))))\n\n       `canvas/prepare-view\n       (fn [_ f state location view]\n         (cond-> (f state location view)\n           (not (show-code? state tool {:pane-id (:id view)}))\n           (dissoc :code)))})))\n"],"x_google_ignoreList":[0]}