{"version":3,"sources":["markdown/core.cljs"],"mappings":"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","names":["p__44096","map__44097","cljs.core/--destructure-map","cljs.core.get","markdown.core/init-transformer","replacement-transformers","custom-transformers","inhibit-separator","html","line","next-line","state","*inhibit-separator*-orig-val__44098","*inhibit-separator*-temp-val__44099","markdown.common/*inhibit-separator*","vec__44100","cljs.core.nth","text","new-state","cljs.core.reduce","p__44103","vec__44104","transformer","G__44107","G__44108","cljs.core.assoc","or__5045__auto__","cljs.core.into","markdown.transformers/transformer-vector","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","markdown.core/format","seq44109","G__44110","cljs.core/first","cljs.core/next","self__5754__auto__","fmt","args","cljs.core.apply","goog.string/format","markdown.core/parse-references","lines","cljs.core/deref","references","cljs.core.atom","seq__44111","cljs.core/seq","chunk__44112","count__44113","i__44114","temp__5804__auto__","cljs.core/chunked-seq?","c__5568__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","markdown.links/parse-reference-link","markdown.core/parse-footnotes","footnotes","seq__44115","chunk__44116","count__44117","i__44118","markdown.links/parse-footnote-link","markdown.core/parse-metadata","vec__44119","metadata","num-lines","markdown.transformers/parse-metadata-headers","cljs.core.drop","markdown.core/md-to-html-string*","params","*substring*-orig-val__44122","*formatter*-orig-val__44123","*substring*-temp-val__44124","*formatter*-temp-val__44125","markdown.common/*substring*","s","n","cljs.core/str","markdown.transformers/*formatter*","vec__44126","cljs.core.partial","cljs.core/assoc","js/goog.string.StringBuffer","G__44132","vec__44133","seq__44134","first__44135","vec__44139","seq__44140","first__44141","more","cljs.core.merge","cljs.core.dissoc","cljs.core/not-empty","cljs.core/empty?","markdown.transformers/footer","markdown.core/md->html","seq44142","G__44143","markdown.core/md->html-with-meta","seq44144","G__44145","markdown.core/mdToHtml","seq44146","self__5755__auto__","markdown.core/mdToHtmlWithMeta","seq44147"],"sourcesContent":["(ns markdown.core\n  (:require [markdown.common\n             :refer [*substring* *inhibit-separator*]]\n            [markdown.links\n             :refer [parse-reference parse-reference-link parse-footnote-link]]\n            [markdown.transformers\n             :refer [transformer-vector footer parse-metadata-headers]]))\n\n\n(defn- init-transformer [{:keys [replacement-transformers custom-transformers inhibit-separator]}]\n  (fn [html line next-line state]\n    (binding [*inhibit-separator* inhibit-separator]\n      (let [[text new-state]\n            (reduce\n              (fn [[text state] transformer]\n                (transformer text (assoc state :next-line next-line)))\n              [line state]\n              (or replacement-transformers\n                  (into transformer-vector custom-transformers)))]\n        (.append html text)\n        new-state))))\n\n(defn format \"Removed from cljs.core 0.0-1885, Ref. http://goo.gl/su7Xkj\"\n  [fmt & args] (apply goog.string/format fmt args))\n\n(defn parse-references [lines]\n  (let [references (atom {})]\n    (doseq [line lines]\n      (parse-reference-link line references))\n    @references))\n\n(defn parse-footnotes [lines]\n  (let [footnotes (atom {:next-fn-id 1 :processed {} :unprocessed {}})]\n    (doseq [line lines]\n      (parse-footnote-link line footnotes))\n    @footnotes))\n\n(defn parse-metadata [lines]\n  (let [[metadata num-lines] (parse-metadata-headers lines)]\n    [metadata (drop num-lines lines)]))\n\n(defn md-to-html-string*\n  \"processes input text line by line and outputs an HTML string\"\n  [text params]\n  (binding [markdown.common/*substring* (fn [s n] (apply str (drop n s)))\n            markdown.transformers/*formatter* format]\n    (let [params      (when params (apply (partial assoc {}) params))\n          lines       (.split (str text \"\\n\") \"\\n\")\n          html        (goog.string.StringBuffer. \"\")\n          references  (when (:reference-links? params) (parse-references lines))\n          footnotes   (when (:footnotes? params) (parse-footnotes lines))\n          [metadata lines] (if (:parse-meta? params) (parse-metadata lines) [nil lines])\n          transformer (init-transformer params)]\n      (loop [[line & more] lines\n             state (merge {:clojurescript    true\n                           :references       references\n                           :footnotes        footnotes\n                           :last-line-empty? true}\n                          params)]\n        (let [line  (if (:skip-next-line? state) \"\" line)\n              state\n              (if (:buf state)\n                (transformer html\n                             (:buf state)\n                             (:next-line state)\n                             (-> state\n                                 (dissoc :buf :lists :next-line)\n                                 (assoc :last-line-empty? true)))\n                state)]\n          (if (not-empty more)\n            (recur more\n                   (assoc (transformer html line (first more) (dissoc state :skip-next-line?))\n                     :last-line-empty? (empty? (.trim line))))\n            (transformer (.append html (footer (:footnotes state))) line \"\" (assoc state :eof true)))))\n      {:metadata metadata :html (.toString html)})))\n\n(defn md->html [text & params]\n  (:html (md-to-html-string* text params)))\n\n(defn md->html-with-meta [text & params]\n  (md-to-html-string* text (into [:parse-meta? true] params)))\n\n(defn ^:export mdToHtml\n  \"Js accessible wrapper\"\n  [& params]\n  (apply md->html params))\n\n(defn ^:export mdToHtmlWithMeta\n  \"Js accessible wrapper\"\n  [& params]\n  (apply md->html-with-meta params))\n"],"x_google_ignoreList":[0]}