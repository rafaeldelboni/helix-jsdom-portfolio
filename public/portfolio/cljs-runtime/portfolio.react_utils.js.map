{"version":3,"sources":["portfolio/react_utils.cljs"],"mappings":";;AAMA,qCAAA,rCAAMA,kFAAcC,MAAMC;AAA1B,sFACMD,/CACA,qDAAA,rDAACE,0HAAqB,WAAKC,5KAG3B,OAACI;AAHqB,AACE;mCAAOH;AAAP,AACE,qDAAA,9CAACC;AAAD,AAAsB,OAACC,8CAAMH,EAAEC;GAA/B;;;IADKA;;;;EAAAA;;oCAAAA;;;IAAAA;0BAAAA;;;;;;IAERH;;AAE7B,kCAAA,lCAAMO,4EAAWC;AAAjB,AACE,OAAA,AAAIA;;AAEN,4CAAA,5CAAMC;AAAN,AACE,IAAMC,OAAK;AAAA,AAAA;;AAAX,AACE,AAACC,cAAcD,KAAKE;;AACpB,CAAM,AAA4BF,gCAC5B,WAAKG;AAAL,AAAA,kBACcA;;;AACpB,IAAAC,eAAU,AAAaJ;AAAvB,AAAA,AAAA,CAAA,AAAAI,iCAGE,WAAyBD,MAAME;AAA/B,AAAA,YAAA,RAAoBP;AAApB,AACE,IAAAQ,qBAAmB,AAAA,kHAAsB,AAAA,yFAAU,AAACT,gCAAUC;AAA9D,AAAA,oBAAAQ;AAAA,AAAA,cAAAA,VAAWC;AAAX,AACE,kFAAA,uDAAA,2CAAA,iFAAA,yHAAA,kEAAA,zbAACC,mEAAiBD,qLAA+BJ,sEACL,AAACM,mDAAQJ;;AAFvD;;;;AAJJ,CAAA,AAAAD,sBASE;AAAA,AAAA,YAAA,RAASN;AAAT,AACE,qDAAA,MAAA,pDACCY,yDACA,kBAAI,iBAAAC,WAAQb;IAARa,eAAA,EAAA,CAAAA,YAAA,OAAA,KAAA,AAAAA;AAAA,AAAA,GAAA,CAAAA,gBAAA;AAAA;;AAAA,OAAAA;;MAAJ,GAEE,AAAA,6FAAY,AAACd,gCAAUC;;;AAd9BM;AAeAJ","names":["portfolio.react-utils/create-scene","scene","impl","cljs.core.update","f","args","js/module$node_modules$react$index.createElement","cljs.core.apply","portfolio.adapter/prepare-scene","portfolio.react-utils/get-scene","this","portfolio.react-utils/create-safe-wrapper","ctor","js/goog.inherits","js/module$node_modules$react$index.Component","error","x32825","info","temp__5804__auto__","actions","portfolio.ui.actions.dispatch","cljs.core.js__GT_clj","js/module$node_modules$react$index","G__32826"],"sourcesContent":["(ns portfolio.react-utils\n  (:require [goog]\n            [\"react\" :as react]\n            [portfolio.ui.actions :as actions]\n            [portfolio.adapter :as adapter]))\n\n(defn create-scene [scene impl]\n  (-> scene\n      (update :component-fn (fn [f]\n                              (fn [& args]\n                                (react/createElement #(apply f args) #js {}))))\n      (adapter/prepare-scene impl)))\n\n(defn get-scene [this]\n  (.. this -props -scene))\n\n(defn create-safe-wrapper []\n  (let [ctor (fn [])]\n    (goog.inherits ctor react/Component)\n    (set! (.-getDerivedStateFromError ctor)\n          (fn [error]\n            #js {:error error}))\n    (specify! (.-prototype ctor)\n      Object\n\n      (componentDidCatch [this error info]\n        (when-let [actions (:report-render-error (:actions (get-scene this)))]\n          (actions/dispatch actions nil {:action/exception error\n                                         :action/info (js->clj info)\n                                         :action/cause \"React error boundary caught error\"})))\n\n      (render [this]\n        (.createElement\n         react \"div\" #js {}\n         (if (some-> this .-state .-error)\n           \"\"\n           (:component (get-scene this))))))\n    ctor))\n"],"x_google_ignoreList":[0]}