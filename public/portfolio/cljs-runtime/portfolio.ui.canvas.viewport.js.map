{"version":3,"sources":["portfolio/ui/canvas/viewport.cljs"],"mappings":"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","names":["var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","portfolio.ui.canvas.viewport/get-width","p__45234","vec__45235","map__45238","cljs.core.nth","cljs.core/--destructure-map","cljs.core.get","seq45230","G__45231","cljs.core/first","cljs.core/next","G__45232","G__45233","self__5754__auto__","frame","frame-body","width","level","or__5045__auto__","cljs.core._EQ_","style","js/window.getComputedStyle","js/parseInt","portfolio.ui.canvas.viewport/get-style-px","prop","temp__5802__auto__","v","G__45239","cljs.core/not-empty","portfolio.ui.canvas.viewport/get-height","p__45244","vec__45245","map__45248","seq45240","G__45241","G__45242","G__45243","_frame","height","cljs.core/contains?","portfolio.ui.canvas.viewport/get-available-width","el","p__45249","map__45250","portfolio.ui.canvas.viewport/prepare-canvas","_","opt","portfolio.ui.components.canvas/get-iframe","portfolio.ui.components.canvas/get-iframe-body","w","portfolio.ui.canvas.viewport.get_width","cljs.core.not_EQ_","p__45251","map__45252","portfolio.ui.canvas.viewport/finalize-canvas","temp__5804__auto__","vec__45253","h","portfolio.ui.canvas.viewport.get_height","margin","shadow","G__45257","portfolio.ui.canvas.viewport/get-padding","js/Error","xs","portfolio.ui.canvas.viewport.get_padding","defaults","cljs.core/empty?","cljs.core/count","x","vec__45258","portfolio.ui.canvas.viewport/create-viewport-tool","config","default-value","p1__45261#","cljs.core.update","p1__45262#","portfolio.ui.canvas.addons/create-toolbar-menu-button","phosphor.icons/load-icon!","p1__45263#","cljs.core.map","cljs.core.update_in","cljs.core.partial","portfolio.ui.canvas.viewport/create-viewport-extension","portfolio.ui.canvas.addons/create-canvas-extension"],"sourcesContent":["(ns portfolio.ui.canvas.viewport\n  (:require [phosphor.icons :as icons]\n            [portfolio.ui.canvas.addons :as addons]\n            [portfolio.ui.components.canvas :as canvas]))\n\n(defn get-width [frame frame-body width & [{:zoom/keys [level]}]]\n  (let [level (or level 1)]\n    (cond\n      (= :auto width)\n      (let [style (js/window.getComputedStyle frame)]\n        (str (* (+ (js/parseInt (.getPropertyValue style \"padding-left\") 10)\n                   (js/parseInt (.getPropertyValue style \"padding-right\") 10)\n                   (.-scrollWidth frame-body))\n                level) \"px\"))\n\n      (number? width) (str (* width level) \"px\")\n\n      (nil? width) \"100%\"\n\n      :else width)))\n\n(defn get-style-px [style prop]\n  (if-let [v (some-> style (.getPropertyValue prop) not-empty)]\n    (js/parseInt v 10)\n    0))\n\n(defn get-height [_frame frame-body height & [{:zoom/keys [level]}]]\n  (let [level (or level 1)]\n    (cond\n      (contains? #{nil :auto \"100%\"} height)\n      (str (.-height (.getBoundingClientRect (.-parentNode frame-body))) \"px\")\n\n      (number? height) (str (* height level) \"px\")\n\n      :else height)))\n\n(defn get-available-width [el]\n  (-> (.-parentNode el)\n      .getBoundingClientRect\n      .-width))\n\n(defn prepare-canvas [_ el {:viewport/keys [width height] :as opt}]\n  (let [frame (canvas/get-iframe el)\n        frame-body (canvas/get-iframe-body el)\n        w (get-width frame frame-body width opt)]\n    (set! (.. el -style -width)\n          (cond\n            (and (= \"100%\" w) (not= \"100%\" (or height \"100%\")))\n            (str \"calc(100% - 40px)\")\n\n            (when (number? w)\n              (<= (get-available-width el) w))\n            \"100%\"\n\n            :else w))))\n\n(defn finalize-canvas [_ el {:viewport/keys [width height] :as opt}]\n  (when-let [frame-body (canvas/get-iframe-body el)]\n    (let [frame (canvas/get-iframe el)\n          w (get-width frame frame-body width opt)\n          h (get-height frame frame-body height opt)\n          [margin shadow] (if (and (or (not= \"100%\" w) (not= \"100%\" height))\n                                   (or (not (number? width))\n                                       (< (+ 40 width) (get-available-width el))))\n                            [\"20px\" \"rgba(0, 0, 0, 0.1) 0px 1px 5px 0px\"]\n                            [\"0\" \"none\"])]\n      (set! (.. el -style -height) h)\n      (set! (.. el -style -margin) (str margin \" auto\"))\n      (set! (.. el -style -boxShadow) shadow))))\n\n(defn get-padding\n  ([xs] (get-padding nil xs))\n  ([defaults xs]\n   (let [xs (if (empty? xs)\n              (:viewport/padding defaults)\n              xs)]\n     (cond\n       (empty? xs)\n       [20 20 20 20]\n\n       (number? xs)\n       [xs xs xs xs]\n\n       (= 1 (count xs))\n       (let [x (first xs)]\n         [x x x x])\n\n       (= 2 (count xs))\n       (let [[v h] xs]\n         [v h v h])\n\n       :else xs))))\n\n(defn create-viewport-tool [config]\n  (let [default-value (-> (:viewport/defaults config)\n                          (update :viewport/width #(or % \"100%\"))\n                          (update :viewport/height #(or % \"100%\"))\n                          (update :viewport/padding get-padding))]\n    (addons/create-toolbar-menu-button\n     {:id :canvas/viewport\n      :title \"Viewport\"\n      :icon (icons/icon :phosphor.regular/browsers)\n      :default-value default-value\n      :options (->> (or (:viewport/options config)\n                        [{:title \"Auto\"\n                          :value {:viewport/width \"100%\"\n                                  :viewport/height \"100%\"}\n                          :type :desktop}\n                         {:title \"iPhone 12 / 13 Pro\"\n                          :value {:viewport/width 390\n                                  :viewport/height 844}\n                          :type :mobile}])\n                    (map #(update-in % [:value :viewport/padding] (partial get-padding default-value))))\n      :prepare-canvas #'prepare-canvas\n      :finalize-canvas #'finalize-canvas})))\n\n(defn create-viewport-extension [config]\n  (addons/create-canvas-extension\n   {:id :canvas/viewport\n    :title \"Viewport\"\n    :default-value (:viewport/defaults config)\n    :prepare-canvas #'prepare-canvas\n    :finalize-canvas #'finalize-canvas}))\n"],"x_google_ignoreList":[0]}