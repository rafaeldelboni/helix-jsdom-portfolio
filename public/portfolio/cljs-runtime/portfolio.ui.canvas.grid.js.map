{"version":3,"sources":["portfolio/ui/canvas/grid.cljs"],"mappings":";AAMA,0CAAA,2DAAAA,rGAAMI,4FAAgBC,MAAMC;AAA5B,AAAA,IAAAL,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;UAAAA,NAAwES;aAAxE,AAAAP,4CAAAF,eAAA,pEAA4CM;WAA5C,AAAAJ,4CAAAF,eAAA,lEAAmDO;iBAAnD,AAAAL,4CAAAF,eAAA,xEAAwDQ;AAAxD,AACE,IAAME,aAAW,AAAS,AAACC,0CAAkBN;IACvCO,OAAK,iBAAAC,mBAAI,AAAA,4FAAaJ;AAAjB,AAAA,oBAAAI;AAAAA;;AAAA;;;AADX,AAEE,GAAI,EAAK,OAASN,uBAAM,gDAAA,hDAACO,oDAAOP;AAC9B,IAAMU,YAAU,CAAGL,OAAKL;IAAxBQ,aACgB,AAAA,yGAAmBN;QADnC,AAAAO,4CAAAD,WAAA,IAAA,/DACOG;QADP,AAAAF,4CAAAD,WAAA,IAAA,/DACSI;YADT,AAAAH,4CAAAD,WAAA,IAAA,nEACWI;QADX,AAAAH,4CAAAD,WAAA,IAAA,/DACaK;AADb,AAEE,CAAM,AAAkBV,4BAClB,iBAAMW,MAAI,CAAG,iBAAAR,mBAAIL;AAAJ,AAAA,oBAAAK;AAAAA;;AAAA;;OAAkBI;AAA/B,AACE,yDAAA,uDAAA,wDAAA,uDAAA,8DAAA,6DAAA,8DAAA,6DAAA,jaAAKI,uDAAUA,wDAAWA,uDAAUA,wDAC/BJ,6DAAgBA,8DAAiBA,6DAAgBA;;;AAC9D,CAAM,AAAsBP,gCACtB,iBAAMJ,aAAO,iBAAAO,mBAAIP;AAAJ,AAAA,oBAAAO;AAAAA;;AAAA;;;AAAb,iHACO,wEAAA,6EAAA,xGAAK,CAAGO,IAAE,CAAGd,aAAOM,0DAAa,CAAGA,OAAK,CAAGM,IAAEZ,1LAC9C,+CAAA,/CAACgB,9DACD,yDAAA,lDAACC;;;AACd,kCAAA,jCAAM,AAAuBb;;AAC7B,qCAAA,7BAAM,AAAmBA;;AAK3B,qCAAA,7BAAM,AAAmBA;;;AAE/B,4CAAA,5CAAMc,gGAAkBC;AAAxB,AACE,6DAAA,2CAAA,kDAAA,+DAAA,sDAAA,OAAA,8DAAA,KAAA,lVAACC,uYAIO;AAAA,AAAAC,+BAAA,6FAAA,mFAAA,kDAAA,2CAAA,wDAAA,6BAAA,2DAAA,sBAAA,mFAAA,qDAAA,2CAAA,uDAAA,MAAA,yDAAA,MAAA,oDAAA,uBAAA,mFAAA,qDAAA,wCAAA,gDAAA,iDAAA,yDAAA,oDAAA,4EAAA,uDAAA,0EAAA,oEAAA,+CAAA,2DAAA,KAAA,IAAA,eAAA,OAAA,QAAA,MAAA,QAAA,KAAA,KAAA,gBAAA,mFAAA,oDAAA,wCAAA,yDAAA,oDAAA,4EAAA,gDAAA,0EAAA,oEAAA,kDAAA,iDAAA,oDAAA,eAAA,OAAA,QAAA,KAAA,QAAA,KAAA,MAAA,MAAA,gBAAA,mFAAA,oDAAA,wCAAA,yDAAA,oDAAA,4EAAA,gDAAA,0EAAA,oEAAA,kDAAA,iDAAA,oDAAA,eAAA,OAAA,QAAA,MAAA,QAAA,KAAA,KAAA,MAAA;;AAAA;;CAJR,sEAAA,2CAAA,4DAAA,YAAA,yDAMW,iBAAAd,mBAAI,AAAA,8FAAeY;AAAnB,AAAA,oBAAAZ;AAAAA;;AAAA,0FAAA,2CAAA,sDAAA,WAAA,sDAAA,2CAAA,+DAAA,IAAA,4DAAA,KAAA,wEAAA,oBAAA,2CAAA,sDAAA,UAAA,sDAAA,2CAAA,4DAAA;;KANX,yEAAA,8EAAA,AAAA,4HAAA,wCAAA,gDAAA,qDAAA,sDAAA,iEAAA,yDAAA,oDAAA,6DAAA,6DAAA,mDAAA,sDAAA,AAAA,kGAAA,AAAA,8EAAA,AAAA,gCAAA,AAAA,GAAA,AAAA,EAAA,AAAA,EAAA,AAAA,EAAA,AAAA,osBAAA,AAAA,KAAA,kBAAAV,yCAAA,AAAA,AAAAA,uDAAA","names":["p__45010","map__45011","cljs.core/--destructure-map","cljs.core.get","portfolio.ui.canvas.grid/prepare-canvas","_data","el","offset","size","group-size","opt","body-style","portfolio.ui.components.canvas/get-iframe","zoom","or__5045__auto__","cljs.core.not_EQ_","vec__45014","cljs.core.nth","real-size","t","_","l","big","cljs.core.repeat","clojure.string.join","portfolio.ui.canvas.grid/create-grid-tool","config","portfolio.ui.canvas.addons/create-toolbar-menu-button","phosphor.icons/load-icon!"],"sourcesContent":["(ns portfolio.ui.canvas.grid\n  (:require [clojure.string :as str]\n            [phosphor.icons :as icons]\n            [portfolio.ui.canvas.addons :as addons]\n            [portfolio.ui.components.canvas :as canvas]))\n\n(defn prepare-canvas [_data el {:grid/keys [offset size group-size] :as opt}]\n  (let [body-style (.-style (canvas/get-iframe el))\n        zoom (or (:zoom/level opt) 1)]\n    (if (and (number? size) (not= 0 size))\n      (let [real-size (* zoom size)\n            [t _ _ l] (:viewport/padding opt)]\n        (set! (.-backgroundSize body-style)\n              (let [big (* (or group-size 5) real-size)]\n                (str big \"px \" big \"px, \" big \"px \" big \"px, \"\n                     real-size \"px \" real-size \"px, \" real-size \"px \" real-size \"px\")))\n        (set! (.-backgroundPosition body-style)\n              (let [offset (or offset 0)]\n                (->> (str (+ l (* offset zoom)) \"px \" (* zoom (+ t offset)) \"px\")\n                     (repeat 4)\n                     (str/join \", \"))))\n        (set! (.-backgroundBlendMode body-style) \"difference\")\n        (set! (.-backgroundImage body-style)\n              \"linear-gradient(rgba(130, 130, 130, 0.5) 1px, transparent 1px),\n                  linear-gradient(90deg, rgba(130, 130, 130, 0.5) 1px, transparent 1px),\n                  linear-gradient(rgba(130, 130, 130, 0.25) 1px, transparent 1px),\n                  linear-gradient(90deg, rgba(130, 130, 130, 0.25) 1px, transparent 1px)\"))\n      (set! (.-backgroundImage body-style) \"none\"))))\n\n(defn create-grid-tool [config]\n  (addons/create-toolbar-menu-button\n   {:id :canvas/grid\n    :title \"Grid\"\n    :persist? true\n    :icon (icons/icon :phosphor.regular/grid-four)\n    :default-value {:grid/size 0}\n    :options (or (:grid/options config)\n                 [{:title \"5 x 20px\"\n                   :value {:grid/offset 0\n                           :grid/size 20\n                           :grid/group-size 5}}\n                  {:title \"No grid\"\n                   :value {:grid/size 0}}])\n    :prepare-canvas #'prepare-canvas}))\n"],"x_google_ignoreList":[0]}