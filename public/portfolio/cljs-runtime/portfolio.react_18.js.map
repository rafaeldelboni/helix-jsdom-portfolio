{"version":3,"sources":["portfolio/react_18.cljs"],"mappings":";;;AAUA,8BAAA,9BAAMA,oEAAUC;AAAhB,AACE,oBAAU,AAAaA;AAAvB;AAAA,AACE,CAAM,AAAaA,eAAI,AAACC,gDAAqBD;;;AAC/C,OAAaA;;AAEf,AAAKE,6BAAQ,AAACC;AAEd,oCAAA,2CAAA,AAAA,/EAAKC,iMAEF,WAAKC,MAAML;AAAX,AACE,GAAQ,GAAA,OAAA,NAAOA;AAAf;AAAA,AAAA,MAAA,KAAAM,MAAA,CAAA,kBAAA,iDAAA,KAAA;;;AACA,IAAAC,2BAAa,iBAAAE,WAAQT;AAAR,AAAA,GAAA,CAAAS,YAAA;AAAA;;AAAA,OAAAA;;;AAAb,AAAA,oBAAAF;AAAA,AAAA,cAAAA,VAAWC;AAAX,AACE,GAAU,6CAAA,7CAACE,uDAAY,AAAcV;AAArC;AAAA,AACE,CAACQ,wCAAAA,0CAAAA;;;AAFL;;AAGA,IAAMG,OAAK,AAACZ,4BAASC;AAArB,AACE,CAAM,AAAWA,aAAI;AAAA,AACE,AAAUW;;AACV,gBAAA,fAAM,AAAaX;;AACnB,gBAAA,fAAM,AAAaA;;AACnB,qBAAA,bAAM,AAAWA;;;AACxC,iBAAA,hBAAM,AAAcA;;AACpB,OAASW,YAAK,yEAAA,zEAACC,8CAAoBV,sCAAoBG;;AAE9D,kCAAA,lCAAMQ,4EAAcR;AAApB,AACE,OAACS,mCAAwBT,MAAMD;;AAEjC,AAACW,6CACA,WAAKC;AAAL,AACE,IAAAT,qBAAiB,qEAAA,2CAAA,yEAAA,qKAAA,5UACE,AAACU,+CAAqBD,8GACVA,4BAEZ,AAACC,+CAAqB,AAAA,6FAAYD,KAClCA;AALnB,AAAA,oBAAAT;AAAA,AAAA,YAAAA,RAAWF;AAAX,AAME,OAACQ,gCAAaR;;AANhB","names":["portfolio.react-18/get-root","el","js/module$node_modules$react_dom$client.createRoot","portfolio.react-18/Wrapper","portfolio.react-utils/create-safe-wrapper","portfolio.react-18/component-impl","scene","js/Error","temp__5804__auto__","f","G__32851","cljs.core._EQ_","root","js/module$node_modules$react$index.createElement","portfolio.react-18/create-scene","portfolio.react-utils/create-scene","portfolio.data/register-scene-renderer!","x","js/module$node_modules$react$index.isValidElement"],"sourcesContent":["(ns portfolio.react-18\n  (:require [portfolio.adapter :as adapter]\n            [portfolio.data :as data]\n            [portfolio.react-utils :as react-util]\n            [\"react\" :as react]\n            [\"react-dom/client\" :as react-dom])\n  (:require-macros [portfolio.react-18]))\n\n::data/keep\n\n(defn get-root [el]\n  (when-not (.-reactRoot el)\n    (set! (.-reactRoot el) (react-dom/createRoot el)))\n  (.-reactRoot el))\n\n(def Wrapper (react-util/create-safe-wrapper))\n\n(def component-impl\n  {`adapter/render-component\n   (fn [scene el]\n     (assert (some? el) \"Asked to render component into null container.\")\n     (when-let [f (some-> el .-unmount)]\n       (when-not (= \"react18\" (.-unmountLib el))\n         (f)))\n     (let [root (get-root el)]\n       (set! (.-unmount el) (fn []\n                              (.unmount root)\n                              (set! (.-reactRoot el) nil)\n                              (set! (.-innerHTML el) \"\")\n                              (set! (.-unmount el) nil)))\n       (set! (.-unmountLib el) \"react18\")\n       (.render root (react/createElement Wrapper #js {:scene scene}))))})\n\n(defn create-scene [scene]\n  (react-util/create-scene scene component-impl))\n\n(data/register-scene-renderer!\n (fn [x]\n   (when-let [scene (cond\n                      (react/isValidElement x)\n                      {:component x}\n\n                      (react/isValidElement (:component x))\n                      x)]\n     (create-scene scene))))\n"],"x_google_ignoreList":[0]}