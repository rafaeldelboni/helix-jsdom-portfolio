{"version":3,"sources":["portfolio/ui/core.cljs"],"mappings":"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","names":["p__45434","map__45435","cljs.core/--destructure-map","cljs.core.get","portfolio.ui.core/sidebar?","sidebar-status","state","cljs.core._EQ_","portfolio.ui.screen/small-screen?","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","portfolio.ui.core/prepare-scene-browser","p__45440","vec__45441","map__45444","cljs.core.nth","seq45437","G__45438","cljs.core/first","cljs.core/next","G__45439","self__5754__auto__","location","select-actions","cljs.core.concat","portfolio.ui.routes/get-id","portfolio.ui.scene-browser/prepare-browser","clojure.walk/postwalk","x","cljs.core/vector?","portfolio.ui.routes/get-location","cljs.core/second","portfolio.ui.core/prepare-sidebar","cljs.core/boolean","cljs.core/not-empty","phosphor.icons/load-icon!","portfolio.ui.search/prepare-search","portfolio.ui.core/prepare-header","portfolio.ui.collection/prepare-selection-menu-bar","portfolio.ui.core.prepare_scene_browser","portfolio.ui.core/get-current-view","_location","portfolio.ui.core/prepare-view-option","current-view","view","G__45445","cljs.core.assoc","portfolio.ui.core/prepare-data","scenes?","cljs.core/seq","cljs.core/vals","portfolio.ui.collection/get-selection","document","portfolio.ui.document/get-document","portfolio.ui.routes/get-document-id","G__45447","p1__45446#","cljs.core.map","portfolio.ui.document/prepare-view","portfolio.ui.view/prepare-data"],"sourcesContent":["(ns portfolio.ui.core\n  (:require [clojure.walk :as walk]\n            [phosphor.icons :as icons]\n            [portfolio.ui.collection :as collection]\n            [portfolio.ui.document :as doc]\n            [portfolio.ui.routes :as routes]\n            [portfolio.ui.scene-browser :as scene-browser]\n            [portfolio.ui.screen :as screen]\n            [portfolio.ui.search :as search]\n            [portfolio.ui.view :as view]))\n\n(defn sidebar? [{:keys [sidebar-status] :as state}]\n  (cond\n    (= sidebar-status :hidden)\n    false\n\n    (= sidebar-status :visible)\n    true\n\n    :else\n    (not (screen/small-screen? state))))\n\n(defn prepare-scene-browser [state location & [{:keys [select-actions]}]]\n  (->> {:path-ctx [:ui]\n        :location location\n        :select-actions (concat [[:event/prevent-default]\n                                 [::navigate-to ::scene-browser/target-id]]\n                                select-actions)\n        :current-id (routes/get-id location)}\n       (scene-browser/prepare-browser state)\n       (walk/postwalk\n        (fn [x]\n          (if (and (vector? x) (= ::navigate-to (first x)))\n            [:go-to-location (routes/get-location location {:id (second x)})]\n            x)))))\n\n(defn prepare-sidebar [state location]\n  (when (sidebar? state)\n    {:width 360\n     :slide? (boolean (:sidebar-status state))\n     :title (not-empty (:title state))\n     :buttons [{:icon (icons/icon :phosphor.regular/caret-double-left)\n                :text \"Hide sidebar\"\n                :actions [[:assoc-in [:sidebar-status]\n                           (if (screen/small-screen? state)\n                             :auto\n                             :hidden)]]}\n               {:text \"Portfolio documentation\"\n                :icon (icons/icon :phosphor.regular/book)\n                :actions [[:go-to-location {:query-params {:doc \"index\"}}]]}]\n     :items (prepare-scene-browser state location)\n     :search (when (:index state)\n               (search/prepare-search state location))}))\n\n(defn prepare-header [state location]\n  (when-not (sidebar? state)\n    {:buttons [(when-not (screen/small-screen? state)\n                 {:icon (icons/icon :phosphor.regular/caret-double-right)\n                  :text \"Show sidebar\"\n                  :actions [[:assoc-in [:sidebar-status]\n                             (if (screen/small-screen? state)\n                               :visible\n                               :auto)]]})\n               {:text \"Portfolio documentation\"\n                :icon (icons/icon :phosphor.regular/book)\n                :actions [[:go-to-location {:query-params {:doc \"index\"}}]]}]\n\n     :menu-bar (collection/prepare-selection-menu-bar\n                state\n                (:current-selection state)\n                {:expand-path [:header-menu-expanded?]\n                 :location location\n                 :tight? (screen/small-screen? state)})\n\n     :menu\n     (when (:header-menu-expanded? state)\n       {:items (->> {:select-actions [[:assoc-in [:header-menu-expanded?] false]]}\n                    (prepare-scene-browser state location))})}))\n\n(defn get-current-view [state _location]\n  ;; TODO: Eventually support more views\n  (first (:views state)))\n\n(defn prepare-view-option [current-view view]\n  (cond-> view\n    (= (:id current-view) (:id view))\n    (assoc :selected? true)))\n\n(defn prepare-data [state location]\n  (let [scenes? (seq (vals (:scenes state)))\n        state (assoc state :current-selection (collection/get-selection state (routes/get-id location)))\n        current-view (get-current-view state location)\n        document (doc/get-document (routes/get-document-id location))]\n    (cond-> {:small? (screen/small-screen? state)\n             :tab-bar {:tabs (map #(prepare-view-option current-view %) (:views state))}\n             :view (cond\n                     document (doc/prepare-view state location document)\n                     scenes? (view/prepare-data current-view state location)\n                     :else (doc/prepare-view state location (doc/get-document :document/up-and-running)))}\n\n      scenes? (assoc :header (prepare-header state location)\n                     :sidebar (prepare-sidebar state location)))))\n"],"x_google_ignoreList":[0]}