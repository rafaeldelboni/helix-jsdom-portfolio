{"version":3,"sources":["portfolio/ui/canvas/compare.cljs"],"mappings":"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","names":["portfolio.ui.canvas.compare/get-ctx","state","view","ctx","id","G__45211","cljs.core.assoc","portfolio.ui.collection/get-selected-scenes","portfolio.ui.canvas/prepare-scenes","portfolio.ui.canvas.compare/get-expand-path","portfolio.ui.canvas.compare/can-curate?","cljs.core/count","portfolio.ui.layout/get-layout-panes","portfolio.ui.layout/get-current-layout","portfolio.ui.canvas.compare/create-compare-tool","_config","cljs.core/with-meta","_tool","options","path","curating?","cljs.core.get_in","portfolio.ui.components.canvas-toolbar-buttons/MenuButton","phosphor.icons/load-icon!","G__45212","cljs.core/not","cljs.core/contains?","cljs.core.conj","_","f","expand-path","expanded?","and__5043__auto__","G__45216","portfolio.ui.collection/prepare-selection-menu-bar","portfolio.ui.collection/get-selection","portfolio.ui.scene-browser/prepare-browser","cljs.core.dissoc"],"sourcesContent":["(ns portfolio.ui.canvas.compare\n  (:require [phosphor.icons :as icons]\n            [portfolio.ui.canvas :refer [prepare-scenes]]\n            [portfolio.ui.canvas.protocols :as canvas]\n            [portfolio.ui.collection :as collection]\n            [portfolio.ui.components.canvas-toolbar-buttons :refer [MenuButton]]\n            [portfolio.ui.layout :as layout]\n            [portfolio.ui.scene-browser :as scene-browser]))\n\n(defn get-ctx [state view ctx id]\n  (cond-> ctx\n    id (assoc :scenes (->> (collection/get-selected-scenes state id)\n                           (prepare-scenes state nil view nil)))))\n\n(defn get-expand-path [id]\n  [:panes id :menu-expanded?])\n\n(defn can-curate? [state]\n  (< 1 (count (layout/get-layout-panes (layout/get-current-layout state)))))\n\n(defn create-compare-tool [_config]\n  (with-meta\n    {:id :canvas/selection}\n    {`canvas/prepare-toolbar-button\n     (fn [_tool state options]\n       (when (can-curate? state)\n         (let [path [:panes (:pane-id options) :curate-selection?]\n               curating? (get-in state path)]\n           (with-meta\n             {:title \"Select pane scene(s) for comparison\"\n              :icon (icons/icon :phosphor.regular/git-diff)\n              :align :right\n              :selected? curating?\n              :actions (cond-> [[:assoc-in path (not curating?)]]\n                         (not (contains? (get-in state [:panes (:pane-id options)]) :curate-selection?))\n                         (conj [:assoc-in (get-expand-path (:pane-id options)) true]))}\n             {`canvas/render-toolbar-button #'MenuButton}))))\n\n     `canvas/prepare-pane\n     (fn [_ f state view ctx]\n       (let [expand-path (get-expand-path (:pane-id ctx))\n             curating? (when (can-curate? state)\n                         (get-in state [:panes (:pane-id ctx) :curate-selection?]))\n             expanded? (and curating? (get-in state expand-path))\n             id (when curating? (get-in state [:panes (:pane-id ctx) :selection-id]))\n             ctx (if curating? (get-ctx state view ctx id) ctx)]\n         (cond-> (f state view ctx)\n           curating?\n           (assoc :menu-bar (collection/prepare-selection-menu-bar\n                             state\n                             (if id\n                               (collection/get-selection state id)\n                               (:current-selection state))\n                             {:expand-path expand-path\n                              :tight? true}))\n\n           expanded?\n           (assoc :browser {:items\n                            (scene-browser/prepare-browser\n                             state\n                             {:select-actions [[:assoc-in [:panes (:pane-id ctx) :selection-id] ::scene-browser/target-id]\n                                               [:assoc-in expand-path false]]\n                              :path-ctx [:panes (:pane-id ctx)]})})\n\n           expanded?\n           (dissoc :canvases))))}))\n"],"x_google_ignoreList":[0]}