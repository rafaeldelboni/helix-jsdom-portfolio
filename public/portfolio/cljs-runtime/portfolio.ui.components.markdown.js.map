{"version":3,"sources":["portfolio/ui/components/markdown.cljs"],"mappings":"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","names":["portfolio.ui.components.markdown/langs","portfolio.ui.components.markdown/autolink","s","iter__5523__auto__","s__44224","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","cljs.core/count","b__44226","cljs.core/chunk-buffer","i__44225","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__44223","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","w","clojure.string.split","cljs.core/re-find","clojure.string.join","portfolio.ui.components.markdown/space-lists","clojure.string/split-lines","p1__44230#","cljs.core.partition_by","cljs.core/boolean","p1__44231#","cljs.core.map","portfolio.ui.components.markdown/unbreak-links","s__44233","b__44235","i__44234","vec__44236","cljs.core.nth","iter__44232","vec__44241","text","link","cljs.core.partition_all","G__44240","G__44245","clojure.string/replace","portfolio.ui.components.markdown/render-markdown","markdown.core/md->html","G__44246","p__44248","map__44249","cljs.core/--destructure-map","cljs.core.get","G__44247","dumdom.core/component","portfolio.ui.components.markdown/Markdown","el","props","seq__44250","chunk__44251","count__44252","i__44253","c__5568__auto__","cljs.core/chunk-first","cljs.core/next","pre","code","cljs.core._EQ_","or__5045__auto__","G__44259","G__44261","js/Prism.highlightElement","markdown"],"sourcesContent":["(ns portfolio.ui.components.markdown\n  (:require [clojure.string :as str]\n            [dumdom.core :as d]\n            [markdown.core :as md]))\n\n(def langs\n  {\"clj\" \"clojure\"\n   \"cljs\" \"clojure\"})\n\n(defn autolink [s]\n  (->> (for [w (str/split s #\" \")]\n         (if (re-find #\"^https?://[^\\s]+$\" w)\n           (str \"[\" w \"](\" w \")\")\n           w))\n       (str/join \" \")))\n\n(defn space-lists [s]\n  (->> (str/split-lines s)\n       (partition-by #(boolean (re-find #\"^(-|\\d+\\.) \" %)))\n       (map #(str/join \"\\n\" %))\n       (str/join \"\\n\\n\")))\n\n(defn unbreak-links\n  \"Removes line breaks in brackets, which causes markdown-clj to not recognize\n  them as links.\"\n  [s]\n  (->> (for [[text link] (->> (str/split s #\"(\\[[^\\]]+\\]\\([^\\)]+\\))\")\n                              (partition-all 2))]\n         (str text (some-> link (str/replace #\"\\n\" \" \"))))\n       str/join))\n\n(defn render-markdown [s]\n  (-> (space-lists s)\n      autolink\n      unbreak-links\n      md/md->html))\n\n(d/defcomponent Markdown\n  :on-render (fn [el props]\n               (doseq [pre (.querySelectorAll el \"pre\")]\n                 (let [code (.-firstElementChild pre)]\n                   (when (= \"CODE\" (.-tagName code))\n                     (set! (.-className pre) (str \"language-\" (or (langs (.-className code)) (.-className code))))\n                     (js/Prism.highlightElement pre)))))\n  [{:keys [markdown]}]\n  [:div.md {:dangerouslySetInnerHTML {:__html (render-markdown markdown)}}])\n"],"x_google_ignoreList":[0]}