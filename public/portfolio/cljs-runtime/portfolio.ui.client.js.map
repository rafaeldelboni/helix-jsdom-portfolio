{"version":3,"sources":["portfolio/ui/client.cljs"],"mappings":"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","names":["p__45451","map__45452","cljs.core/--destructure-map","cljs.core.get","portfolio.ui.client/render","app","on-render","cljs.core/deref","state","page-data","portfolio.ui.core/prepare-data","app-data","portfolio.ui.actions/actionize-data","cljs.core/ifn?","temp__5802__auto__","el","js/document.getElementById","dumdom.core/render","portfolio.ui.components.app/App","js/console.error","portfolio.ui.client/a-element","and__5043__auto__","cljs.core._EQ_","portfolio.ui.client/get-path","href","cljs.core/not-empty","js/location.origin","portfolio.ui.client/relay-body-clicks","e","path","G__45453","cljs.core/re-find","or__5045__auto__","js/window","cljs.core.println","js/history","portfolio.ui.actions/execute-action!","portfolio.ui.client/ensure-portfolio-css!","f","cljs.core/not","portfolio.ui.css/create-css-link","listener","js/document.head","portfolio.ui.client/ensure-element!","js/document.createElement","js/document.body","script","portfolio.ui.client/set-window-size","dim","js/window.innerWidth","js/window.innerHeight","cljs.core.swap_BANG_","cljs.core/assoc","portfolio.ui.client/set-window-size-debounced","portfolio.homeless/debounce","portfolio.ui.client/keep-size-up-to-date","js/window.onresize","portfolio.ui.client/keep-css-files-up-to-date","observer","portfolio.ui.css/watch-css-reloads","portfolio.ui.client/started?","var_args","args__5775__auto__","len__5769__auto__","i__5770__auto__","argseq__5776__auto__","cljs.core/IndexedSeq","portfolio.ui.client/start-app","p__45458","vec__45459","map__45462","cljs.core.nth","seq45456","G__45457","cljs.core/first","cljs.core/next","self__5754__auto__","portfolio.ui.css/load-css-files","p1__45454#","js/document.body.addEventListener","js/window.onpopstate","p1__45455#","cljs.core/add-tap","cljs.core/update","cljs.core/conj","cljs.core/add-watch","_","location","portfolio.ui.routes/get-current-location","portfolio.ui.collection/get-selection","portfolio.ui.routes/get-id","id","cljs.core.sort_by","cljs.core/vals","G__45463","cljs.core.assoc"],"sourcesContent":["(ns portfolio.ui.client\n  \"Bootstrap and render a Portfolio UI app instance\"\n  (:require [dumdom.core :as d]\n            [portfolio.homeless :as h]\n            [portfolio.ui.actions :as actions]\n            [portfolio.ui.collection :as collection]\n            [portfolio.ui.components.app :refer [App]]\n            [portfolio.ui.core :as portfolio]\n            [portfolio.ui.css :as css]\n            [portfolio.ui.routes :as routes]))\n\n(defn render [app {:keys [on-render]}]\n  (let [state @app\n        page-data (portfolio/prepare-data state (:location state))\n        app-data (actions/actionize-data app page-data)]\n    (when (ifn? on-render)\n      (on-render page-data))\n    (if-let [el (js/document.getElementById \"portfolio\")]\n      (d/render (App app-data) el)\n      (js/console.error \"Unable to render portfolio: no element with id \\\"portfolio\\\"\"))))\n\n(defn- a-element [el]\n  (loop [el el]\n    (cond\n      (nil? el) nil\n      (and (.-href el)\n           (= \"A\" (.-tagName el))) el\n      :else (recur (.-parentNode el)))))\n\n(defn- get-path [href]\n  (when (not-empty href)\n    (.replace href js/location.origin \"\")))\n\n(defn relay-body-clicks [app e]\n  (let [path (some->> (.-target e) a-element .-href get-path)]\n    (when (and path (re-find #\"^/\" path))\n      (.preventDefault e)\n      (if (or e.ctrlKey e.metaKey)\n        (.open js/window path \"_blank\")\n        (do\n          (when (:log? @app)\n            (println \"Update URL from body click\" path))\n          (.pushState js/history false false path)\n          (actions/execute-action! app [:go-to-current-location]))))))\n\n(defn ensure-portfolio-css! [f]\n  (if-not (js/document.getElementById \"portfolio-css\")\n    (let [el (css/create-css-link \"/portfolio/styles/portfolio.css\")]\n      (.addEventListener el \"load\" (fn listener [e]\n                                     (.removeEventListener el \"load\" listener)\n                                     (f)))\n      (.appendChild js/document.head el))\n    (f)))\n\n(defn ensure-element! []\n  (when-not (js/document.getElementById \"portfolio\")\n    (let [el (js/document.createElement \"div\")]\n      (set! (.-id el) \"portfolio\")\n      (.appendChild js/document.body el))\n    (let [script (js/document.createElement \"script\")]\n      (set! (.-type script) \"text/javascript\")\n      (set! (.-src script) \"/portfolio/prism.js\")\n      (.appendChild js/document.body script))))\n\n(defn set-window-size [app]\n  (let [dim {:w js/window.innerWidth\n             :h js/window.innerHeight}]\n    (swap! app assoc :win dim)))\n\n(def ^:private set-window-size-debounced (h/debounce set-window-size 100))\n\n(defn keep-size-up-to-date [app]\n  (set-window-size app)\n  (set! js/window.onresize #(set-window-size-debounced app)))\n\n(defn keep-css-files-up-to-date [app]\n  (when-not (::css-listener @app)\n    (let [observer (css/watch-css-reloads (:css-paths @app))]\n      (swap! app assoc ::css-listener observer))))\n\n(defn started? [app]\n  (::started? @app))\n\n(defn start-app [app & [{:keys [on-render]}]]\n  (css/load-css-files (:css-paths @app))\n  (if (started? app)\n    (render app {:on-render on-render})\n    (do\n      (js/document.body.addEventListener \"click\" #(relay-body-clicks app %))\n      (keep-size-up-to-date app)\n      (keep-css-files-up-to-date app)\n      (ensure-element!)\n      (ensure-portfolio-css!\n       (fn []\n         (set! js/window.onpopstate (fn [] (actions/execute-action! app [:go-to-current-location])))\n         (add-tap #(swap! app update :taps conj %))\n         (add-watch app ::render (fn [_ _ _ _] (render app {:on-render on-render})))\n         (actions/execute-action!\n          app\n          (let [location (routes/get-current-location)]\n            (if (nil? (collection/get-selection @app (routes/get-id location)))\n              (if-let [id (:id (first (sort-by :id (vals (:scenes @app)))))]\n                [:go-to-location {:query-params {:id id}}]\n                [:go-to-location\n                 (cond-> location\n                   (nil? (-> location :query-params :doc))\n                   (assoc :query-params {:doc \"up-and-running\"}))])\n              [:go-to-current-location])))\n         (swap! app assoc ::started? true)))))\n  app)\n"],"x_google_ignoreList":[0]}